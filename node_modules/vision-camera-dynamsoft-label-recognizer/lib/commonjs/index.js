"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  decodeBase64: true,
  destroy: true,
  recognize: true
};
exports.decodeBase64 = decodeBase64;
exports.destroy = destroy;
exports.recognize = recognize;

var _reactNative = require("react-native");

var _Definitions = require("./Definitions");

Object.keys(_Definitions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _Definitions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Definitions[key];
    }
  });
});
const LINKING_ERROR = `The package 'vision-camera-dynamsoft-label-recognizer' doesn't seem to be linked. Make sure: \n\n` + _reactNative.Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo managed workflow\n';
const VisionCameraDynamsoftLabelRecognizer = _reactNative.NativeModules.VisionCameraDynamsoftLabelRecognizer ? _reactNative.NativeModules.VisionCameraDynamsoftLabelRecognizer : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }

});

function decodeBase64(base64, config) {
  return VisionCameraDynamsoftLabelRecognizer.decodeBase64(base64, config);
}

function destroy() {
  return VisionCameraDynamsoftLabelRecognizer.destroy();
}

function recognize(frame, config) {
  'worklet'; // @ts-ignore
  // eslint-disable-next-line no-undef

  return __recognize(frame, config);
}
//# sourceMappingURL=index.js.map