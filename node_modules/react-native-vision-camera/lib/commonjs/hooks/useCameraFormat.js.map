{"version":3,"sources":["useCameraFormat.ts"],"names":["useCameraFormat","device","formats","sort","sortFormats"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,eAAT,CAAyBC,MAAzB,EAAgF;AACrF,SAAO,oBAAQ,MAAMA,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEC,OAAR,CAAgBC,IAAhB,CAAqBC,yBAArB,EAAkC,CAAlC,CAAd,EAAoD,CAACH,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAApD,CAAP;AACD","sourcesContent":["import { useMemo } from 'react';\nimport type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';\nimport { sortFormats } from '../utils/FormatFilter';\n\n/**\n * Returns the best format for the given camera device.\n *\n * This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio.\n *\n * @param {CameraDevice} device The Camera Device\n *\n * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.\n */\nexport function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined {\n  return useMemo(() => device?.formats.sort(sortFormats)[0], [device?.formats]);\n}\n"]}