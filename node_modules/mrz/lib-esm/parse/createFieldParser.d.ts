export interface Details {
    label: string;
    field: string | null;
    value: string | null;
    valid: boolean;
    ranges: Range[];
    line: number;
    start: number;
    end: number;
    error?: string;
}
interface ParseResult {
    value: string;
    start: number;
    end: number;
}
type Parser = (source: string, ...related: string[]) => ParseResult | string;
type FieldOptions = {
    label: string;
    field: string | null;
    line: number;
    start: number;
    end: number;
    parser: Parser;
    related?: Range[];
};
interface Range {
    line: number;
    start: number;
    end: number;
}
export type ParseFunction = (lines: string | string[]) => Details;
export declare function createFieldParser(fieldOptions: FieldOptions): ParseFunction;
export {};
//# sourceMappingURL=createFieldParser.d.ts.map